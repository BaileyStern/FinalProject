Page Powell 
November 24, 2024


Project Implementation Summary 

For the overall idea of our project, we plan to have one website that will contain links to each of our own websites (3 total) displaying each of our generative art pieces. Each website will give a short description of what the generative art is and how viewers can interact with it. 

For my part of the project so far I have used my personal github website, that I previously created in this class, and will add my generative art visuals. Currently, I have only written the code for the visuals  and plan on uploading them to my personal website once I have finalized what I want it to look like.

Functions: Everytime the user mouse clicks on the screen a shape appears. However, on every click a random shape and color appears. In addition, the user can use the up and down arrows to adjust the size of the next shape before clicking again. I wanted my piece to be more interactive so that users can create their own generative art.  


Final Project Group Repository: https://github.com/BaileyStern/FinalProject 

Page’s Personal Website that will be added to group final website: https://pagepowell25.github.io/

Page’s Personal Website Repository: https://github.com/pagepowell25/pagepowell25.github.io




Generative Art code: 

let size = 50; //preset size

function setup() {
  createCanvas(400, 400);
}

function draw() {
    // No continuous drawing is needed, shapes will appear on mouse press
  }

function mousePressed() { //when ever the mouse is clicked a random shape will appear
  let shapeType = floor(random(4)); //Chooses a random number between 0 and 3 for shapes, and each number represents a different shape
  let x = mouseX;
  let y = mouseY;

  // Generates random RGB values for each shape generated
  let r = random(255);
  let g = random(255);
  let b = random(255);

  // Set the random fill color
  fill(r, g, b);
 
  switch (shapeType) { // Different shapes that could be produced on each mouse click
    case 0:
      ellipse(x, y, size, size); // Circle
      break;
    case 1:
      rect(x, y, size, size); // Square
      break;
    case 2:
      triangle(x, y, x + size, y, x, y + size); //Triangle
      break;
    case 3:
      let x2 = x + random(-size, size); //produces random line
      let y2 = y + random(-size, size);
      line(x, y, x2, y2);
      break;
  }
}
function keyPressed() {  //when the up and down arrows are pressed the user can change the shape's size
  if (keyCode === UP_ARROW) {
    size += 2; // Increases size by 2 every time up arrow is pressed
  } else if (keyCode === DOWN_ARROW) {
    size = max(10, size - 2); // Decreases size by 2 every time down arrow is pressed
  }
}
